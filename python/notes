python修改Win系统的网络参数：
1. 安装wmi 1.4.9
2. 安装pywin32****.exe
3. 在django下使用wmi由于是线程环境,需要import wmi,pythoncom,win32com,并且在view的开头pythoncom.CoInitialize()
4. 	nic_configs = wmi.WMI().Win32_NetworkAdapterConfiguration(IPEnabled=True)
	interface = nic_configs[0]
	netinfoDict = {}
	netinfoDict["IP"] = interface.IPAddress[0]
	netinfoDict["IPSubnet"] = interface.IPSubnet[0]
	netinfoDict["DefaultIPGateway"] = interface.DefaultIPGateway[0]
5. 完成
存在的问题：不能修改网关为空值,网络上有说先设置DHCP再关闭能清空网关,实际测试未实现.

2016-12-6 django request POST方法无效问题：
描述：ajax POST方法提交数据到django后台,但是Django将此请求归类为GET方法,但是浏览器提示此请求为POST方法
故障原因&解决方法：在请求中添加一个参数,估计是因为django认为此请求不带参数就不是POST方法导致

2016-12-8 Django Daemon Process问题
解决方法有多种
1：django-background-tasks 可以设置后台任务,定时触发执行,问题是在SQLite下存在持续database locked 问题,在其他高性能数据库下不存在此BUG
2：Celery,python后台任务开源库,问题是比较复杂学习成本高,优点是性能好,在多个著名互联网使用
3：土方法,单起脚本,注入django环境和使用项目数据库,优点是简单容易控制,尽量不要长时间使用数据库应该也存在database locked问题
3的代码为：
import os
os.chdir('path/to/project/')
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "your_project_name.settings")
from app.models import *
剩下的自己随意发挥即可
PS：注意使用3脚本时不要在__init__中引入数据模型,否则会报错.初步估计是os.environ也会调用__init__初始化导致数据模型位置的问题

2016-12-13 Django 文件上传问题
不要使用Form模式,直接html post过来就行,在Forms下样式存在问题

2016-12-13 Django 进程检测和杀死进程,关闭service也可以使用wmi
使用wmi模块
代码
import wmi
c = wmi.WMI ()
process_id, return_value = c.Win32_Process.Create (CommandLine="notepad.exe")
for process in c.Win32_Process (ProcessId=process_id):
  print process.ProcessId, process.Name
result = process.Terminate ()

2016-12-20 protobuf相关问题
升级为2.6版本，主要目的是使用oneof特性，最终目的是为了解决通过网络收到消息后不知道该消息是什么类型的问题，通过使用oneof特性，能够将N个消息集成到一个消息中，但是该消息会清除其他消息，意味着该消息只会使用one of 其中一个子消息。收到消息后能够通过HasField WhichOneof 等函数确定消息类型
升级方法：编译protoc.exe或者下release win32，进入XX\protobuf-2.6.1\protobuf-2.6.1\python 中python setup.py build / install 注：联网！离线安装很麻烦
code： https://developers.google.com/protocol-buffers/docs/reference/python-generated#oneof
message Foo {
  oneof test_oneof {
     string name = 1;
     int32 serial_number = 2;
  }
}

message = Foo()
message.name = "Bender"
assert message.HasField("name")
message.serial_number = 2716057
assert message.HasField("serial_number")
assert not message.HasField("name")

assert message.WhichOneof("test_oneof") is None
message.name = "Bender"
assert message.WhichOneof("test_oneof") == "name"

assert not message.HasField("test_oneof")
message.name = "Bender"
assert message.HasField("test_oneof")
message.serial_number = 2716057
assert message.HasField("test_oneof")
message.ClearField("test_oneof")
assert not message.HasField("test_oneof")
assert not message.HasField("serial_number")